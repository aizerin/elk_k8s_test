---
{{- if .Values.filebeat.enabled }}
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: {{ .Values.filebeat.name }}
  labels:
    {{- include "filebeat.labels" . | nindent 4 }}
  annotations:
    eck.k8s.elastic.co/license: basic
spec:
  type: filebeat
  version: {{ .Values.clusterVersion }}
  elasticsearchRef:
    name: {{ .Values.mainClusterName }} 
  kibanaRef:
    name: {{ .Values.mainClusterKibanaName }}
  config:
    output.elasticsearch:
      indices:
        - index: "filebeat-cluster"
          when.not.equals:
            kubernetes.namespace: "elk"
        - index: "filebeat-elk"
          when.equals:
            kubernetes.namespace: "elk"
    filebeat:
      autodiscover:
        providers:
          - type: kubernetes
            hints:
              enabled: true
              default_config:
                type: container
                paths:
                - /var/log/containers/*${data.kubernetes.container.id}.log
    processors:
      - add_host_metadata: {}
    logging.json: true
  daemonSet:
    podTemplate:
      metadata:
        annotations:
          co.elastic.logs/json.keys_under_root: "true"
          co.elastic.logs/json.add_error_key: "true"
          co.elastic.logs/json.message_key: "message"
      spec:
        serviceAccountName: {{ .Values.filebeat.name }}
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        containers:
          - name: filebeat
            volumeMounts:
              - name: varlogcontainers
                mountPath: /var/log/containers
              - name: varlogpods
                mountPath: /var/log/pods
              - name: varlibdockercontainers
                mountPath: /var/lib/docker/containers
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
        volumes:
          - name: varlogcontainers
            hostPath:
              path: /var/log/containers
          - name: varlogpods
            hostPath:
              path: /var/log/pods
          - name: varlibdockercontainers
            hostPath:
              path: /var/lib/docker/containers
{{- end }}